rosca$treatment <- NA
rosca$treatment[rosca$encouragement == 1] <- "control"
rosca$treatment[rosca$safe_box == 1] <- "safebox"
rosca$treatment[rosca$locked_box == 1] <- "lockbox"
rosca$treatment <- as.factor(rosca$treatment)
View(rosca)
rosca$treatment["control"]
rosca.table <- table(control = rosca$encouragement[1], safebox = rosca$safe_box[1], lockbox = rosca$locked_box[1])
rosca.table <- table(control = rosca$encouragement[1], safebox = rosca$safe_box[1], lockbox = rosca$locked_box[1])
rosca.table
rosca <- read.csv("data/rosca.csv")
rosca$treatment <- NA
rosca$treatment[rosca$encouragement == 1] <- "control"
rosca$treatment[rosca$safe_box == 1] <- "safebox"
rosca$treatment[rosca$locked_box == 1] <- "lockbox"
rosca$treatment <- as.factor(rosca$treatment)
rosca$treatment
rosca <- read.csv("data/rosca.csv")
rosca$treatment <- NA
rosca$treatment[rosca$encouragement == 1] <- "control"
rosca$treatment[rosca$safe_box == 1] <- "safebox"
rosca$treatment[rosca$locked_box == 1] <- "lockbox"
rosca$treatment <- as.factor(rosca$treatment)
rosca.table <- table(rosca$treatment)
rosca.table
rosca.table <- table(rosca$treatment)
addmargins(rosca.table)
rosca.table
# There are 111 individuals in the control group, 195 individuals in the treatment arm lockbox, and 117 individuals in the treatment arm safebox.
rosca.table <- table(rosca$treatment)
addmargins(rosca.table)
# There are 111 individuals in the control group, 195 individuals in the treatment arm lockbox, and 117 individuals in the treatment arm safebox.
rosca.table <- table(rosca$treatment, rosca$has_followup2, na.rm = T)
rosca.table <- table(rosca$treatment, rosca$has_followup2)
rosca.table <- table(rosca$treatment, rosca$has_followup2)
rosca.table
help()
subset(rosca$has_followup2, 1)
rosca.table <- table(rosca$treatment, rosca$has_followup2[1])
rosca.table <- table(rosca$treatment, rosca$has_followup2==1)
rosca.table
# How many participants are left in each group of this subset?
# In the control group there are 102 individuals who participated in the second follow-up, 184 individuals in the lockbox group, and 107 individuals in the safebox group.
rosca.table <- table(rosca$treatment, rosca$has_followup2==1)
addmargins(rosca.table)
rosca.table
# How many participants are left in each group of this subset?
# In the control group there are 102 individuals who participated in the second follow-up, 184 individuals in the lockbox group, and 107 individuals in the safebox group.
rosca.table <- table(rosca$treatment, rosca$has_followup2==1)
addmargins(rosca.table)
# How many participants are left in each group of this subset?
# In the control group there are 102 individuals who participated in the second follow-up, 184 individuals in the lockbox group, and 107 individuals in the safebox group.
rosca.table <- table(rosca$treatment)
# There are 111 individuals in the control group, 195 individuals in the treatment arm lockbox, and 117 individuals in the treatment arm safebox.
rosca.table <- table(rosca$treatment)
addmargins(rosca.table)
# There are 111 individuals in the control group, 195 individuals in the treatment arm lockbox, and 117 individuals in the treatment arm safebox.
rosca.table <- table(rosca$treatment, rosca$has_followup2==1)
addmargins(rosca.table)
subset(rosca, has_followup2==1)
# How many participants are left in each group of this subset?
# In the control group there are 102 individuals who participated in the second follow-up, 184 individuals in the lockbox group, and 107 individuals in the safebox group.
rosca.table <- table(rosca$treatment, rosca$has_followup2==1)
addmargins(rosca.table)
rosca.followup <- subset(rosca, has_followup2==1)
# How many participants are left in each group of this subset?
# In the control group there are 102 individuals who participated in the second follow-up, 184 individuals in the lockbox group, and 107 individuals in the safebox group.
View(rosca.followup)
rosca.table <- table(rosca$treatment, rosca$has_followup2==1)
addmargins(rosca.table)
rosca.followup <- subset(rosca, has_followup2==1)
dropout <- rosca.table - rosca.followup
dropout
# How many participants are left in each group of this subset?
# In the control group there are 102 individuals who participated in the second follow-up, 184 individuals in the lockbox group, and 107 individuals in the safebox group.
rosca.table <- table(rosca$treatment, rosca$has_followup2==1)
addmargins(rosca.table)
rosca.followup <- subset(rosca, has_followup2==1)
dropout <- rosca.table - rosca.followup / rosca.table
# How many participants are left in each group of this subset?
# In the control group there are 102 individuals who participated in the second follow-up, 184 individuals in the lockbox group, and 107 individuals in the safebox group.
rosca.table <- table(rosca$treatment, rosca$has_followup2==1)
addmargins(rosca.table)
rosca.followup <- subset(rosca, has_followup2==1)
dropout <- rosca.table - rosca.followup / rosca.table
drop
# How many participants are left in each group of this subset?
# In the control group there are 102 individuals who participated in the second follow-up, 184 individuals in the lockbox group, and 107 individuals in the safebox group.
rosca.followup <- subset(rosca, has_followup2==1)
dropout <- rosca.table - rosca.followup / rosca.table
drop
# How many participants are left in each group of this subset?
# In the control group there are 102 individuals who participated in the second follow-up, 184 individuals in the lockbox group, and 107 individuals in the safebox group.
rosca.followup <- subset(rosca, has_followup2==1)
dropout <- rosca.table - rosca.followup / rosca.table
dropout
# How many participants are left in each group of this subset?
# In the control group there are 102 individuals who participated in the second follow-up, 184 individuals in the lockbox group, and 107 individuals in the safebox group.
rosca.followup <- subset(rosca, has_followup2==1)
dropout <- (rosca.table - rosca.followup) / rosca.table
dropout
# How many participants are left in each group of this subset?
# In the control group there are 102 individuals who participated in the second follow-up, 184 individuals in the lockbox group, and 107 individuals in the safebox group.
rosca.followup <- subset(rosca, has_followup2==1)
dropout <- (rosca.table - rosca.followup) / rosca.table
dropout
# How many participants are left in each group of this subset?
# In the control group there are 102 individuals who participated in the second follow-up, 184 individuals in the lockbox group, and 107 individuals in the safebox group.
rosca.followup <- subset(rosca, has_followup2==1)
followup<- table(rosca.followup$treatment)
dropout <- (rosca.table - rosca.followup) / rosca.table
dropout
# How many participants are left in each group of this subset?
# In the control group there are 102 individuals who participated in the second follow-up, 184 individuals in the lockbox group, and 107 individuals in the safebox group.
rosca.followup <- subset(rosca, has_followup2==1)
followup.table <- table(rosca.followup$treatment)
dropout <- (rosca.table - followup.table) / rosca.table
rosca.table <- table(rosca$treatment)
rosca.table
addmargins(rosca.table)
# There are 111 individuals in the control group, 195 individuals in the treatment arm lockbox, and 117 individuals in the treatment arm safebox.
rosca.followup <- subset(rosca, has_followup2==1)
followup.table <- table(rosca.followup$treatment)
followup.table
dropout <- (rosca.table - followup.table) / rosca.table
dropout
# How many participants are left in each group of this subset?
# In the control group there are 102 individuals who participated in the second follow-up, 184 individuals in the lockbox group, and 107 individuals in the safebox group.
invest <- tapply(rosca$fol2_amtinvest, rosca$treatment, mean, na.rm = T)
invest
invest <- tapply(rosca$fol2_amtinvest, rosca$treatment, mean, na.rm = T)
invest
invest[1] - invest[2]
invest <- tapply(rosca$fol2_amtinvest, rosca$treatment, mean, na.rm = T)
invest
invest.diff.sc <- invest[2] - invest[1]
invest <- tapply(rosca$fol2_amtinvest, rosca$treatment, mean, na.rm = T)
invest
invest.diff.sc <- invest[2] - invest[1]
invest <- tapply(rosca$fol2_amtinvest, rosca$treatment, mean, na.rm = T)
invest
invest.diff.sc <- invest[2] - invest[1]
invest.diff.sc
invest <- tapply(rosca$fol2_amtinvest, rosca$treatment, mean, na.rm = T)
invest
invest.diff.lc <- invest[2] - invest[1]
invest.diff.sc <- invest[3] - invest[1]
invest <- tapply(rosca$fol2_amtinvest, rosca$treatment, mean, na.rm = T)
invest
# Difference in mean amounts between control and lockbox
invest.diff.lc <- invest[2] - invest[1]
invest.diff.lc
# Difference in mean amounts between control and safebox
invest.diff.sc <- invest[3] - invest[1]
invest.diff.sc
##gender
demographic.control <- table( c(rosca$treatment, rosca$bg_female, rosca$bg_b1_age, rosca$bg_married))
demographic.control
##gender
demographic.control <- table(rosca$treatment, rosca$bg_female, rosca$bg_b1_age, rosca$bg_married))
##gender
demographic.control <- table( c(rosca$treatment, rosca$bg_female, rosca$bg_b1_age, rosca$bg_married))
demographic.control
##gender
demographic.control <- table( c(rosca$treatment =1, rosca$bg_female =1, rosca$bg_b1_age=1, rosca$bg_married=1))
invest <- tapply(rosca$fol2_amtinvest, rosca$treatment, mean, na.rm = T)
invest
invest.diff <- c((invest[3] - invest[2]), (invest[3] - invest[1]), (invest[2] - invest[1]))
names(invest.diff) <- c("Safebox - Lockbox", "Safebox - Control", "Lockbox - Control")
# Briefly interpret the results
invest <- tapply(rosca$fol2_amtinvest, rosca$treatment, mean, na.rm = T)
invest
invest.diff <- c((invest[3] - invest[2]), (invest[3] - invest[1]), (invest[2] - invest[1]))
names(invest.diff) <- c("Safebox - Lockbox", "Safebox - Control", "Lockbox - Control")
invest.diff
# Briefly interpret the results
invest <- tapply(rosca$fol2_amtinvest, rosca$treatment, mean, na.rm = T)
invest
invest.diff <- c((invest[3] - invest[2]), (invest[3] - invest[1]), (invest[2] - invest[1]))
names(invest.diff) <- c("Safebox - Lockbox", "Safebox - Control", "Lockbox - Control")
invest.diff
# Briefly interpret the results
# Yes having a safe box does increase the amount invested in health products. This is shown by the difference in average amount invested between safebox and control being the largest at 150 Kenyan shillings.
##gender
demographic.control <- tapply(rosca$bg_female, rosca$treatment, mean, na.rm= T)
demographic.control
##gender
tapply(rosca$bg_female, rosca$treatment, mean, na.rm= T)
##gender
tapply(rosca$bg_female, rosca$treatment, mean, na.rm= T)
##age
tapply(rosca$bg_b1_age, rosca$treatment, mean, na.rm= T)
##marital status
tapply(rosca$bg_married, rosca$treatment, mean, na.rm= T)
##for married women
married.women <- subset(rosca, bg_female ==1 & bg_married ==1)
tapply(married_women$fol2_amtinvest, married_women$treatment, mean, na.rm = T)
##for married women
married.women <- subset(rosca, bg_female ==1 & bg_married ==1)
tapply(married.women$fol2_amtinvest, married.women$treatment, mean, na.rm = T)
##for unmarried women
unmarried.women <- subset(rosca, bg_female ==1 & bg_married ==0)
tapply(unmarried.women$fol2_amtinvest, unmarried.women$treatment, mean, na.rm = T)
library(swirl)
swirl()
TRUE | FALSE != FALSE
head(resume)
dim(resume)
summary(resume)
table(resume$call, resume$sex)
table( call = resume$call, sex = resume$sex)
table(sex = resume$sex, call = resume$call)
invest
invest <- tapply(rosca$fol2_amtinvest, rosca$treatment, mean, na.rm = T)
require(ggplot2)
require(plotly)
library(knitr)
opts_chunk$set(fig.width=12, fig.height=8, fig.path='Figs/')
# Data Stuff
require(dplyr)
require(tibble)
require(reshape2)
require(scales)
require(RColorBrewer)
pdf(NULL)
ui <- fluidpage(
#titlePanel defines the application title
titlePanel("Diamonds Dataset"),
#Fuctions for the sidebar
sidebarLayout(
sidebarPanel(
selectInput("")
)
)
)
require(ggplot2)
require(plotly)
library(knitr)
opts_chunk$set(fig.width=12, fig.height=8, fig.path='Figs/')
# Data Stuff
require(dplyr)
require(tibble)
require(reshape2)
require(scales)
require(RColorBrewer)
pdf(NULL)
diamonds <- diamonds
View(diamonds)
cut
diamonds$cut
# Class 4 ggplot2 Examples
require(ggplot2)
require(plotly)
library(knitr)
opts_chunk$set(fig.width=12, fig.height=8, fig.path='Figs/')
# Data Stuff
require(dplyr)
require(tibble)
require(reshape2)
require(scales)
require(RColorBrewer)
pdf(NULL)
diamonds <- diamonds
mtcars <- mtcars %>%
rownames_to_column()
iris <- iris
starwars <- starwars
airquality <- airquality %>%
mutate(Date = as.Date(paste0("1973-", Month, "-", Day)))
ggplot(data = mtcars, aes(x = hp, y = drat, color = as.factor(cyl))) +
geom_point() +
scale_color_brewer(palette = "Oranges") +
facet_wrap(~as.factor(gear))
#Color changes the color of teh outline and fill changes the color inside the bars
ggplot(data = diamonds, aes(x=cut, fill = cut)) +
geom_bar(stat = "count") +
scale_y_continuous(labels = comma) +
ggtitle("Count of Diamonds by Cut") +
xlab("Cut") +
ylab("Count of Diamonds") +
scale_fill_brewer(palette = "Set1")
diamonds$color
#Functions for the Diamond Table
ggplot(data = diamonds, aes(x=color, fill = color)) +
geom_bar(stat = "percent") +
ggtitle("Percent of Diamonds by Color") +
xlab("Color") +
ylab("Perecent of Diamonds") +
scale_fill_brewer(palette = "Blues")
#Functions for the Diamond Table
ggplot(data = diamonds, aes(x=color, fill = color)) +
geom_bar(stat = "count") +
ggtitle("Count of Diamonds by Color") +
xlab("Color") +
ylab("Count of Diamonds") +
scale_fill_brewer(palette = "Blues")
#Functions for the Diamond Table
ggplot(data = diamonds, aes(x=color, fill = color)) +
geom_bar(stat = "count") +
scale_y_continuous(labels = comma) +
ggtitle("Count of Diamonds by Color") +
xlab("Color") +
ylab("Count of Diamonds") +
scale_fill_brewer(palette = "Blues")
ggplotly(
ggplot(data = airquality, aes(x = Date, y = Wind, group = 1, text = paste0("<b>", format(Date, "%B %d"), "</b>: ", Wind))) +
geom_point() +
geom_line(),
tooltip = "text"
)
#format() allows you to change the date formatting
#paste0 allows you to add a space after
ggplotly(
ggplot(data = airquality, aes(x = Date, y = Wind, group = 1, text = paste0("<b>", format(Date, "%B %d"), "</b>: ", Wind)))
)
ggplotly(
ggplot(data = mtcars, aes(x = hp, y = drat, color = as.factor(cyl))) +
geom_point() +
scale_color_brewer(palette = "Oranges")
)
#Functions for the Diamonds Plot
ggplotly(
ggplot(data = diamonds, aes(x = carat, y = price)) +
geom_point() +
scale_color_brewer(palette = "Oranges")
)
#Functions for the Diamonds Plot
ggplotly(
ggplot(data = diamonds, aes(x = carat, y = price, color = as.factor(cyl))) +
geom_point() +
scale_color_brewer(palette = "Oranges")
)
#Functions for the Diamonds Plot
ggplotly(
ggplot(data = diamonds, aes(x = carat, y = price, color = as.factor(color))) +
geom_point() +
scale_color_brewer(palette = "Oranges")
)
#Functions for the Diamonds Plot
ggplotly(
ggplot(data = diamonds, aes(x = carat, y = price, color = as.factor(color))) +
geom_point() +
scale_y_continuous(labels = comma) +
ggtitle("Diamonds Classified by Color, Price, and Carat") +
xlab("Carat") +
ylab("Price of Diamonds")
scale_color_brewer(palette = "Oranges")
#Functions for the Diamonds Plot
ggplotly(
ggplot(data = diamonds, aes(x = carat, y = price, color = as.factor(color))) +
geom_point() +
scale_y_continuous(labels = comma) +
ggtitle("Diamonds Classified by Color, Price, and Carat") +
xlab("Carat") +
ylab("Price of Diamonds") +
scale_color_brewer(palette = "Oranges")
)
#Functions for the Diamonds Plot
ggplotly(
ggplot(data = diamonds, aes(x = carat, y = price, color = as.factor(color))) +
geom_point() +
scale_y_continuous(labels = comma) +
ggtitle("Diamonds Classified by Color, Price, and Carat") +
xlab("Carat") +
ylab("Price of Diamonds (in dollars") +
scale_color_brewer(palette = "Oranges")
)
ui <- fluidpage(
#titlePanel defines the application title
titlePanel("Diamonds Dataset"),
#Fuctions for the sidebar
sidebarLayout(
sidebarPanel(
selectInput("color",
"Color:",
multiple = TRUE,
selectize = TRUE,
selected = c("D", "E", "F", "G","H","I","J"))
),
#Functions for the main panel
mainPanel(
tabsetPanel(
tabPanel("Plot",
plotlyOutput("plot1")
),
tabPanel("Plot",
plotlyOutput("plot2")
)
)
)
)
)
ui <- fluidPage(
#titlePanel defines the application title
titlePanel("Diamonds Dataset"),
#Fuctions for the sidebar
sidebarLayout(
sidebarPanel(
selectInput("color",
"Color:",
multiple = TRUE,
selectize = TRUE,
selected = c("D", "E", "F", "G","H","I","J"))
),
#Functions for the main panel
mainPanel(
tabsetPanel(
tabPanel("Plot",
plotlyOutput("plot1")
),
tabPanel("Plot",
plotlyOutput("plot2")
)
)
)
)
)
require(ggplot2)
require(plotly)
library(knitr)
opts_chunk$set(fig.width=12, fig.height=8, fig.path='Figs/')
# Data Stuff
require(dplyr)
require(tibble)
require(reshape2)
require(scales)
require(RColorBrewer)
pdf(NULL)
diamonds <- diamonds
shiny::runApp('Documents/GitHub/project1-clarissp')
partner.load <- read.csv("IntimatePartnerViolence.csv") %>%
mutate(boro = trimws(as.character(Comm_Dist_.Boro),"both")
)
runApp('Documents/GitHub/project1-clarissp')
runApp('Documents/GitHub/project1-clarissp')
runApp('Documents/GitHub/project1-clarissp')
runApp('Documents/GitHub/project1-clarissp')
runApp('Documents/GitHub/project1-clarissp')
runApp('Documents/GitHub/project1-clarissp')
runApp('Documents/GitHub/project1-clarissp')
runApp('Documents/GitHub/project1-clarissp')
runApp('Documents/GitHub/project1-clarissp')
runApp('Documents/GitHub/project1-clarissp')
runApp('Documents/GitHub/project1-clarissp')
runApp('Documents/GitHub/project1-clarissp')
runApp('Documents/GitHub/project1-clarissp')
runApp('Documents/GitHub/project1-clarissp')
runApp('Documents/GitHub/project1-clarissp')
runApp('Documents/GitHub/project1-clarissp')
runApp('Documents/GitHub/project1-clarissp')
runApp('Documents/GitHub/project1-clarissp')
runApp('Documents/GitHub/project1-clarissp')
runApp('Documents/GitHub/project1-clarissp')
runApp('Documents/GitHub/project1-clarissp')
runApp('Documents/GitHub/project1-clarissp')
runApp('Documents/GitHub/project1-clarissp')
runApp('Documents/GitHub/project1-clarissp')
runApp('Documents/GitHub/project1-clarissp')
runApp('Documents/GitHub/project1-clarissp')
View(partner$IPV_Fel_Assault)
is.character(partner$IPV_Fel_Assault)
is.character("partner.IPV_Fel_Assault")
is.numeric("partner$IPV_Fel_Assault")
is.numeric("partner.load$IPV_Fel_Assault")
runApp('Documents/GitHub/project1-clarissp')
partner.load <- read.csv("IntimatePartnerViolence.csv") %>%
mutate(boro = trimws(as.character(Comm_Dist_.Boro),"both"),
assaultincidents = as.character(IPV_Fel_Assault))
setwd("~/Documents/GitHub/project1-clarissp")
partner.load <- read.csv("IntimatePartnerViolence.csv") %>%
mutate(boro = trimws(as.character(Comm_Dist_.Boro),"both"),
assaultincidents = as.character(IPV_Fel_Assault))
runApp()
is.numeric("partner.load$IPV_Fel_Assault")
is.numeric("partner$Comm_District")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(partner.load)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(partner.load)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
